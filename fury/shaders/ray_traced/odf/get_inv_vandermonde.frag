void getInvVandermonde(out float v[(SH_DEGREE + 1) * (SH_DEGREE + 1)], int shDegree)
{
    if (shDegree == 2)
    {
        float tmpV[9];
        tmpV[0*3 + 0] = -0.3333333333;     tmpV[0*3 + 1] = 0.6666666667;      tmpV[0*3 + 2] = 0.6666666667;
        tmpV[1*3 + 0] = -0.0;              tmpV[1*3 + 1] = 1.1547005384;      tmpV[1*3 + 2] = -1.1547005384;
        tmpV[2*3 + 0] = 1.0;               tmpV[2*3 + 1] = 0.0;               tmpV[2*3 + 2] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
    else if (shDegree == 4)
    {
        float tmpV[25];
        tmpV[0*5 + 0] = 0.2;               tmpV[0*5 + 1] = -0.2472135955;     tmpV[0*5 + 2] = 0.6472135955;      tmpV[0*5 + 3] = 0.6472135955;      tmpV[0*5 + 4] = -0.2472135955;
        tmpV[1*5 + 0] = 0.0;               tmpV[1*5 + 1] = -0.1796111906;     tmpV[1*5 + 2] = 1.9919186279;      tmpV[1*5 + 3] = -1.9919186279;     tmpV[1*5 + 4] = 0.1796111906;
        tmpV[2*5 + 0] = -2.0;              tmpV[2*5 + 1] = 2.3416407865;      tmpV[2*5 + 2] = -0.3416407865;     tmpV[2*5 + 3] = -0.3416407865;     tmpV[2*5 + 4] = 2.3416407865;
        tmpV[3*5 + 0] = -0.0;              tmpV[3*5 + 1] = 1.7013016167;      tmpV[3*5 + 2] = -1.0514622242;     tmpV[3*5 + 3] = 1.0514622242;      tmpV[3*5 + 4] = -1.7013016167;
        tmpV[4*5 + 0] = 1.0;               tmpV[4*5 + 1] = 0.0;               tmpV[4*5 + 2] = 0.0;               tmpV[4*5 + 3] = 0.0;               tmpV[4*5 + 4] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
    else if (shDegree == 6)
    {
        float tmpV[49];
        tmpV[0*7 + 0] = -0.1428571429;     tmpV[0*7 + 1] = 0.1585594663;      tmpV[0*7 + 2] = -0.2291250674;     tmpV[0*7 + 3] = 0.6419941725;      tmpV[0*7 + 4] = 0.6419941725;      tmpV[0*7 + 5] = -0.2291250674;     tmpV[0*7 + 6] = 0.1585594663;
        tmpV[1*7 + 0] = -0.0;              tmpV[1*7 + 1] = 0.0763582145;      tmpV[1*7 + 2] = -0.2873137468;     tmpV[1*7 + 3] = 2.8127602518;      tmpV[1*7 + 4] = -2.8127602518;     tmpV[1*7 + 5] = 0.2873137468;      tmpV[1*7 + 6] = -0.0763582145;
        tmpV[2*7 + 0] = 3.0;               tmpV[2*7 + 1] = -3.2929766145;     tmpV[2*7 + 2] = 4.4513463718;      tmpV[2*7 + 3] = -1.1583697574;     tmpV[2*7 + 4] = -1.1583697574;     tmpV[2*7 + 5] = 4.4513463718;      tmpV[2*7 + 6] = -3.2929766145;
        tmpV[3*7 + 0] = 0.0;               tmpV[3*7 + 1] = -1.5858139579;     tmpV[3*7 + 2] = 5.5818117995;      tmpV[3*7 + 3] = -5.0751495106;     tmpV[3*7 + 4] = 5.0751495106;      tmpV[3*7 + 5] = -5.5818117995;     tmpV[3*7 + 6] = 1.5858139579;
        tmpV[4*7 + 0] = -5.0;              tmpV[4*7 + 1] = 4.7858935686;      tmpV[4*7 + 2] = -1.0200067492;     tmpV[4*7 + 3] = 0.2341131806;      tmpV[4*7 + 4] = 0.2341131806;      tmpV[4*7 + 5] = -1.0200067492;     tmpV[4*7 + 6] = 4.7858935686;
        tmpV[5*7 + 0] = -0.0;              tmpV[5*7 + 1] = 2.3047648710;      tmpV[5*7 + 2] = -1.2790480077;     tmpV[5*7 + 3] = 1.0257168633;      tmpV[5*7 + 4] = -1.0257168633;     tmpV[5*7 + 5] = 1.2790480077;      tmpV[5*7 + 6] = -2.3047648710;
        tmpV[6*7 + 0] = 1.0;               tmpV[6*7 + 1] = 0.0;               tmpV[6*7 + 2] = 0.0;               tmpV[6*7 + 3] = 0.0;               tmpV[6*7 + 4] = 0.0;               tmpV[6*7 + 5] = 0.0;               tmpV[6*7 + 6] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
    else if (shDegree == 8)
    {
        float tmpV[81];
        tmpV[0*9 + 0] = 0.1111111111;      tmpV[0*9 + 1] = -0.1182419747;     tmpV[0*9 + 2] = 0.1450452544;      tmpV[0*9 + 3] = -0.2222222222;     tmpV[0*9 + 4] = 0.6398633870;      tmpV[0*9 + 5] = 0.6398633870;      tmpV[0*9 + 6] = -0.2222222222;     tmpV[0*9 + 7] = 0.1450452544;      tmpV[0*9 + 8] = -0.1182419747;
        tmpV[1*9 + 0] = 0.0;               tmpV[1*9 + 1] = -0.0430365592;     tmpV[1*9 + 2] = 0.1217074194;      tmpV[1*9 + 3] = -0.3849001795;     tmpV[1*9 + 4] = 3.6288455938;      tmpV[1*9 + 5] = -3.6288455938;     tmpV[1*9 + 6] = 0.3849001795;      tmpV[1*9 + 7] = -0.1217074194;     tmpV[1*9 + 8] = 0.0430365592;
        tmpV[2*9 + 0] = -4.0;              tmpV[2*9 + 1] = 4.2410470634;      tmpV[2*9 + 2] = -5.1195045066;     tmpV[2*9 + 3] = 7.3333333333;      tmpV[2*9 + 4] = -2.4548758901;     tmpV[2*9 + 5] = -2.4548758901;     tmpV[2*9 + 6] = 7.3333333333;      tmpV[2*9 + 7] = -5.1195045066;     tmpV[2*9 + 8] = 4.2410470634;
        tmpV[3*9 + 0] = -0.0;              tmpV[3*9 + 1] = 1.5436148932;      tmpV[3*9 + 2] = -4.2957743433;     tmpV[3*9 + 3] = 12.7017059222;     tmpV[3*9 + 4] = -13.9222930051;    tmpV[3*9 + 5] = 13.9222930051;     tmpV[3*9 + 6] = -12.7017059222;    tmpV[3*9 + 7] = 4.2957743433;      tmpV[3*9 + 8] = -1.5436148932;
        tmpV[4*9 + 0] = 14.0;              tmpV[4*9 + 1] = -14.3366589404;    tmpV[4*9 + 2] = 14.6711193836;     tmpV[4*9 + 3] = -6.0;              tmpV[4*9 + 4] = 1.6655395568;      tmpV[4*9 + 5] = 1.6655395568;      tmpV[4*9 + 6] = -6.0;              tmpV[4*9 + 7] = 14.6711193836;     tmpV[4*9 + 8] = -14.3366589404;
        tmpV[5*9 + 0] = 0.0;               tmpV[5*9 + 1] = -5.2181171131;     tmpV[5*9 + 2] = 12.3105308637;     tmpV[5*9 + 3] = -10.3923048454;    tmpV[5*9 + 4] = 9.4457442082;      tmpV[5*9 + 5] = -9.4457442082;     tmpV[5*9 + 6] = 10.3923048454;     tmpV[5*9 + 7] = -12.3105308637;    tmpV[5*9 + 8] = 5.2181171131;
        tmpV[6*9 + 0] = -9.3333333333;     tmpV[6*9 + 1] = 8.0330865684;      tmpV[6*9 + 2] = -1.8540394597;     tmpV[6*9 + 3] = 0.6666666667;      tmpV[6*9 + 4] = -0.1790471086;     tmpV[6*9 + 5] = -0.1790471086;     tmpV[6*9 + 6] = 0.6666666667;      tmpV[6*9 + 7] = -1.8540394597;     tmpV[6*9 + 8] = 8.0330865684;
        tmpV[7*9 + 0] = -0.0;              tmpV[7*9 + 1] = 2.9238044002;      tmpV[7*9 + 2] = -1.5557238269;     tmpV[7*9 + 3] = 1.1547005384;      tmpV[7*9 + 4] = -1.0154266119;     tmpV[7*9 + 5] = 1.0154266119;      tmpV[7*9 + 6] = -1.1547005384;     tmpV[7*9 + 7] = 1.5557238269;      tmpV[7*9 + 8] = -2.9238044002;
        tmpV[8*9 + 0] = 1.0;               tmpV[8*9 + 1] = 0.0;               tmpV[8*9 + 2] = 0.0;               tmpV[8*9 + 3] = 0.0;               tmpV[8*9 + 4] = 0.0;               tmpV[8*9 + 5] = 0.0;               tmpV[8*9 + 6] = 0.0;               tmpV[8*9 + 7] = 0.0;               tmpV[8*9 + 8] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
    else if (shDegree == 10)
    {
        float tmpV[121];
        tmpV[0*11 + 0] = -0.0909090909;    tmpV[0*11 + 1] = 0.0947470106;     tmpV[0*11 + 2] = -0.1080638444;    tmpV[0*11 + 3] = 0.1388220215;     tmpV[0*11 + 4] = -0.2188392043;    tmpV[0*11 + 5] = 0.6387885621;     tmpV[0*11 + 6] = 0.6387885621;     tmpV[0*11 + 7] = -0.2188392043;    tmpV[0*11 + 8] = 0.1388220215;     tmpV[0*11 + 9] = -0.1080638444;    tmpV[0*11 + 10] = 0.0947470106;
        tmpV[1*11 + 0] = -0.0;             tmpV[1*11 + 1] = 0.0278202324;     tmpV[1*11 + 2] = -0.0694484159;    tmpV[1*11 + 3] = 0.1602091533;     tmpV[1*11 + 4] = -0.4791910159;    tmpV[1*11 + 5] = 4.4428720384;     tmpV[1*11 + 6] = -4.4428720384;    tmpV[1*11 + 7] = 0.4791910159;     tmpV[1*11 + 8] = -0.1602091533;    tmpV[1*11 + 9] = 0.0694484159;     tmpV[1*11 + 10] = -0.0278202324;
        tmpV[2*11 + 0] = 5.0;              tmpV[2*11 + 1] = -5.2029168239;    tmpV[2*11 + 2] = 5.8988796576;     tmpV[2*11 + 3] = -7.4503199653;    tmpV[2*11 + 4] = 10.9868742757;    tmpV[2*11 + 5] = -4.2325171441;    tmpV[2*11 + 6] = -4.2325171441;    tmpV[2*11 + 7] = 10.9868742757;    tmpV[2*11 + 8] = -7.4503199653;    tmpV[2*11 + 9] = 5.8988796576;     tmpV[2*11 + 10] = -5.2029168239;
        tmpV[3*11 + 0] = 0.0;              tmpV[3*11 + 1] = -1.5277142200;    tmpV[3*11 + 2] = 3.7909797649;     tmpV[3*11 + 3] = -8.5981275876;    tmpV[3*11 + 4] = 24.0578988657;    tmpV[3*11 + 5] = -29.4378033460;   tmpV[3*11 + 6] = 29.4378033460;    tmpV[3*11 + 7] = -24.0578988657;   tmpV[3*11 + 8] = 8.5981275876;     tmpV[3*11 + 9] = -3.7909797649;    tmpV[3*11 + 10] = 1.5277142200;
        tmpV[4*11 + 0] = -30.0;            tmpV[4*11 + 1] = 30.8179361182;    tmpV[4*11 + 2] = -33.2247539061;   tmpV[4*11 + 3] = 35.8884989085;    tmpV[4*11 + 4] = -19.5374870834;   tmpV[4*11 + 5] = 6.0558059629;     tmpV[4*11 + 6] = 6.0558059629;     tmpV[4*11 + 7] = -19.5374870834;   tmpV[4*11 + 8] = 35.8884989085;    tmpV[4*11 + 9] = -33.2247539061;   tmpV[4*11 + 10] = 30.8179361182;
        tmpV[5*11 + 0] = -0.0;             tmpV[5*11 + 1] = 9.0489625020;     tmpV[5*11 + 2] = -21.3522528115;   tmpV[5*11 + 3] = 41.4175356200;    tmpV[5*11 + 4] = -42.7811292411;   tmpV[5*11 + 5] = 42.1190556280;    tmpV[5*11 + 6] = -42.1190556280;   tmpV[5*11 + 7] = 42.7811292411;    tmpV[5*11 + 8] = -41.4175356200;   tmpV[5*11 + 9] = 21.3522528115;    tmpV[5*11 + 10] = -9.0489625020;
        tmpV[6*11 + 0] = 42.0;             tmpV[6*11 + 1] = -41.1161037573;   tmpV[6*11 + 2] = 36.2032364762;    tmpV[6*11 + 3] = -16.3373898141;   tmpV[6*11 + 4] = 7.4261062994;     tmpV[6*11 + 5] = -2.1758492042;    tmpV[6*11 + 6] = -2.1758492042;    tmpV[6*11 + 7] = 7.4261062994;     tmpV[6*11 + 8] = -16.3373898141;   tmpV[6*11 + 9] = 36.2032364762;    tmpV[6*11 + 10] = -41.1161037573;
        tmpV[7*11 + 0] = 0.0;              tmpV[7*11 + 1] = -12.0727773496;   tmpV[7*11 + 2] = 23.2664073304;    tmpV[7*11 + 3] = -18.8543529304;   tmpV[7*11 + 4] = 16.2609045881;    tmpV[7*11 + 5] = -15.1333636234;   tmpV[7*11 + 6] = 15.1333636234;    tmpV[7*11 + 7] = -16.2609045881;   tmpV[7*11 + 8] = 18.8543529304;    tmpV[7*11 + 9] = -23.2664073304;   tmpV[7*11 + 10] = 12.0727773496;
        tmpV[8*11 + 0] = -15.0;            tmpV[8*11 + 1] = 12.0883694702;    tmpV[8*11 + 2] = -2.8781222629;    tmpV[8*11 + 3] = 1.1465503415;     tmpV[8*11 + 4] = -0.5020543475;    tmpV[8*11 + 5] = 0.1452567988;     tmpV[8*11 + 6] = 0.1452567988;     tmpV[8*11 + 7] = -0.5020543475;    tmpV[8*11 + 8] = 1.1465503415;     tmpV[8*11 + 9] = -2.8781222629;    tmpV[8*11 + 10] = 12.0883694702;
        tmpV[9*11 + 0] = -0.0;             tmpV[9*11 + 1] = 3.5494655329;     tmpV[9*11 + 2] = -1.8496568659;    tmpV[9*11 + 3] = 1.3231896304;     tmpV[9*11 + 4] = -1.0993456751;    tmpV[9*11 + 5] = 1.0102832265;     tmpV[9*11 + 6] = -1.0102832265;    tmpV[9*11 + 7] = 1.0993456751;     tmpV[9*11 + 8] = -1.3231896304;    tmpV[9*11 + 9] = 1.8496568659;     tmpV[9*11 + 10] = -3.5494655329;
        tmpV[10*11 + 0] = 1.0;             tmpV[10*11 + 1] = 0.0;             tmpV[10*11 + 2] = 0.0;             tmpV[10*11 + 3] = 0.0;             tmpV[10*11 + 4] = 0.0;             tmpV[10*11 + 5] = 0.0;             tmpV[10*11 + 6] = 0.0;             tmpV[10*11 + 7] = 0.0;             tmpV[10*11 + 8] = 0.0;             tmpV[10*11 + 9] = 0.0;             tmpV[10*11 + 10] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
    else if (shDegree == 12)
    {
        float tmpV[169];
        tmpV[0*13 + 0] = 0.0769230769;     tmpV[0*13 + 1] = -0.0792252178;    tmpV[0*13 + 2] = 0.0868739663;     tmpV[0*13 + 3] = -0.1027681661;    tmpV[0*13 + 4] = 0.1354125166;     tmpV[0*13 + 5] = -0.2169261613;    tmpV[0*13 + 6] = 0.6381715239;     tmpV[0*13 + 7] = 0.6381715239;     tmpV[0*13 + 8] = -0.2169261613;    tmpV[0*13 + 9] = 0.1354125166;     tmpV[0*13 + 10] = -0.1027681661;   tmpV[0*13 + 11] = 0.0868739663;    tmpV[0*13 + 12] = -0.0792252178;
        tmpV[1*13 + 0] = -0.0;             tmpV[1*13 + 1] = -0.0195272624;    tmpV[1*13 + 2] = 0.0455949748;     tmpV[1*13 + 3] = -0.0910446506;    tmpV[1*13 + 4] = 0.1961788986;     tmpV[1*13 + 5] = -0.5719872785;    tmpV[1*13 + 6] = 5.2558153553;     tmpV[1*13 + 7] = -5.2558153553;    tmpV[1*13 + 8] = 0.5719872785;     tmpV[1*13 + 9] = -0.1961788986;    tmpV[1*13 + 10] = 0.0910446506;    tmpV[1*13 + 11] = -0.0455949748;   tmpV[1*13 + 12] = 0.0195272624;
        tmpV[2*13 + 0] = -6.0;             tmpV[2*13 + 1] = 6.1747539478;     tmpV[2*13 + 2] = -6.7522392818;    tmpV[2*13 + 3] = 7.9352584366;     tmpV[2*13 + 4] = -10.2779620900;   tmpV[2*13 + 5] = 15.4120340799;    tmpV[2*13 + 6] = -6.4918450925;    tmpV[2*13 + 7] = -6.4918450925;    tmpV[2*13 + 8] = 15.4120340799;    tmpV[2*13 + 9] = -10.2779620900;   tmpV[2*13 + 10] = 7.9352584366;    tmpV[2*13 + 11] = -6.7522392818;   tmpV[2*13 + 12] = 6.1747539478;
        tmpV[3*13 + 0] = -0.0;             tmpV[3*13 + 1] = 1.5219401578;     tmpV[3*13 + 2] = -3.5438485554;    tmpV[3*13 + 3] = 7.0300255289;     tmpV[3*13 + 4] = -14.8901987371;   tmpV[3*13 + 5] = 40.6381940129;    tmpV[3*13 + 6] = -53.4651544987;   tmpV[3*13 + 7] = 53.4651544987;    tmpV[3*13 + 8] = -40.6381940129;   tmpV[3*13 + 9] = 14.8901987371;    tmpV[3*13 + 10] = -7.0300255289;   tmpV[3*13 + 11] = 3.5438485554;    tmpV[3*13 + 12] = -1.5219401578;
        tmpV[4*13 + 0] = 55.0;             tmpV[4*13 + 1] = -56.2709061445;   tmpV[4*13 + 2] = 60.2549306937;    tmpV[4*13 + 3] = -67.2511796347;   tmpV[4*13 + 4] = 75.2477722397;    tmpV[4*13 + 5] = -47.9480941911;   tmpV[4*13 + 6] = 15.9674770369;    tmpV[4*13 + 7] = 15.9674770369;    tmpV[4*13 + 8] = -47.9480941911;   tmpV[4*13 + 9] = 75.2477722397;    tmpV[4*13 + 10] = -67.2511796347;  tmpV[4*13 + 11] = 60.2549306937;   tmpV[4*13 + 12] = -56.2709061445;
        tmpV[5*13 + 0] = 0.0;              tmpV[5*13 + 1] = -13.8695326974;   tmpV[5*13 + 2] = 31.6242271914;    tmpV[5*13 + 3] = -59.5793462127;   tmpV[5*13 + 4] = 109.0152185187;   tmpV[5*13 + 5] = -126.4287338180;  tmpV[5*13 + 6] = 131.5040045727;   tmpV[5*13 + 7] = -131.5040045727;  tmpV[5*13 + 8] = 126.4287338180;   tmpV[5*13 + 9] = -109.0152185187;  tmpV[5*13 + 10] = 59.5793462127;   tmpV[5*13 + 11] = -31.6242271914;  tmpV[5*13 + 12] = 13.8695326974;
        tmpV[6*13 + 0] = -132.0;           tmpV[6*13 + 1] = 132.5319409049;   tmpV[6*13 + 2] = -132.4780513404;  tmpV[6*13 + 3] = 123.5674782081;   tmpV[6*13 + 4] = -74.4320682907;   tmpV[6*13 + 5] = 38.8801193717;    tmpV[6*13 + 6] = -12.0694188537;   tmpV[6*13 + 7] = -12.0694188537;   tmpV[6*13 + 8] = 38.8801193717;    tmpV[6*13 + 9] = -74.4320682907;   tmpV[6*13 + 10] = 123.5674782081;  tmpV[6*13 + 11] = -132.4780513404; tmpV[6*13 + 12] = 132.5319409049;
        tmpV[7*13 + 0] = -0.0;             tmpV[7*13 + 1] = 32.6661895777;    tmpV[7*13 + 2] = -69.5298450306;   tmpV[7*13 + 3] = 109.4712331409;   tmpV[7*13 + 4] = -107.8334673306;  tmpV[7*13 + 5] = 102.5184492897;   tmpV[7*13 + 6] = -99.4006071501;   tmpV[7*13 + 7] = 99.4006071501;    tmpV[7*13 + 8] = -102.5184492897;  tmpV[7*13 + 9] = 107.8334673306;   tmpV[7*13 + 10] = -109.4712331409; tmpV[7*13 + 11] = 69.5298450306;   tmpV[7*13 + 12] = -32.6661895777;
        tmpV[8*13 + 0] = 99.0;             tmpV[8*13 + 1] = -93.9113626635;   tmpV[8*13 + 2] = 75.3147168618;    tmpV[8*13 + 3] = -35.2795800772;   tmpV[8*13 + 4] = 18.0521608541;    tmpV[8*13 + 5] = -8.8650350126;    tmpV[8*13 + 6] = 2.6891000373;     tmpV[8*13 + 7] = 2.6891000373;     tmpV[8*13 + 8] = -8.8650350126;    tmpV[8*13 + 9] = 18.0521608541;    tmpV[8*13 + 10] = -35.2795800772;  tmpV[8*13 + 11] = 75.3147168618;   tmpV[8*13 + 12] = -93.9113626635;
        tmpV[9*13 + 0] = 0.0;              tmpV[9*13 + 1] = -23.1470719837;   tmpV[9*13 + 2] = 39.5282127035;    tmpV[9*13 + 3] = -31.2549806126;   tmpV[9*13 + 4] = 26.1530700733;    tmpV[9*13 + 5] = -23.3751762359;   tmpV[9*13 + 6] = 22.1467313083;    tmpV[9*13 + 7] = -22.1467313083;   tmpV[9*13 + 8] = 23.3751762359;    tmpV[9*13 + 9] = -26.1530700733;   tmpV[9*13 + 10] = 31.2549806126;   tmpV[9*13 + 11] = -39.5282127035;  tmpV[9*13 + 12] = 23.1470719837;
        tmpV[10*13 + 0] = -22.0;           tmpV[10*13 + 1] = 16.9531714429;   tmpV[10*13 + 2] = -4.0999479387;   tmpV[10*13 + 3] = 1.7021989010;    tmpV[10*13 + 4] = -0.8387165175;   tmpV[10*13 + 5] = 0.4056079008;    tmpV[10*13 + 6] = -0.1223137885;   tmpV[10*13 + 7] = -0.1223137885;   tmpV[10*13 + 8] = 0.4056079008;    tmpV[10*13 + 9] = -0.8387165175;   tmpV[10*13 + 10] = 1.7021989010;   tmpV[10*13 + 11] = -4.0999479387;  tmpV[10*13 + 12] = 16.9531714429;
        tmpV[11*13 + 0] = -0.0;            tmpV[11*13 + 1] = 4.1785814689;    tmpV[11*13 + 2] = -2.1518186743;   tmpV[11*13 + 3] = 1.5080166355;    tmpV[11*13 + 4] = -1.2150906493;   tmpV[11*13 + 5] = 1.0695001374;    tmpV[11*13 + 6] = -1.0073446769;   tmpV[11*13 + 7] = 1.0073446769;    tmpV[11*13 + 8] = -1.0695001374;   tmpV[11*13 + 9] = 1.2150906493;    tmpV[11*13 + 10] = -1.5080166355;  tmpV[11*13 + 11] = 2.1518186743;   tmpV[11*13 + 12] = -4.1785814689;
        tmpV[12*13 + 0] = 1.0;             tmpV[12*13 + 1] = 0.0;             tmpV[12*13 + 2] = 0.0;             tmpV[12*13 + 3] = 0.0;             tmpV[12*13 + 4] = 0.0;             tmpV[12*13 + 5] = 0.0;             tmpV[12*13 + 6] = 0.0;             tmpV[12*13 + 7] = 0.0;             tmpV[12*13 + 8] = 0.0;             tmpV[12*13 + 9] = 0.0;             tmpV[12*13 + 10] = 0.0;            tmpV[12*13 + 11] = 0.0;            tmpV[12*13 + 12] = 0.0;
        int tmpVLength = (shDegree + 1) * (shDegree + 1);
        for (int i = 0; i != tmpVLength; ++i)
            v[i] = tmpV[i];
    }
}
